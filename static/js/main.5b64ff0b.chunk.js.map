{"version":3,"sources":["components/layout/Header.js","components/Table3.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","Fragment","Navbar","bg","variant","expand","Brand","href","alt","src","width","height","className","ButtonGroup","aria-label","data","Button","onClick","disabled","useStyles","makeStyles","table","minWidth","ccyFormat","num","toFixed","SpanningTable","classes","rows","invoiceSubtotal","map","price","reduce","sum","i","invoiceTotal","total","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","key","desc","qty","unit","rowSpan","colSpan","About","App","socketIOClient","path","state","socket","s","first","todos","id","title","completed","show","acciones_prueba","current_stock","acciones_instante","current_min","stocks","anterior","vender","comprar","total_2","valor_graf","nuevo","nombres_acciones","mkt","nombres_aux","mkt_max","mkts_max","st_prueba","mkt_prueba","acciones_completo","s_m","car_mkt","handleClose","setState","handleShow","console","log","connect","on","push","name","value","formatted","t","Date","getHours","slice","getMinutes","Object","values","ticker","max","min","time","cambio","refreshTableData","m","forEach","element","nombre","pais","primera","listed_companies","keys","includes","undefined","data2","data3","emit","disconnect","markComplete","todo","delTodo","filter","addTodo","newTodo","this","exact","render","Container","Row","Col","sm","Carousel","acion","Item","Card","style","border","Body","Title","Text","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","fill","Footer","scrollY","maxHeight","length","striped","bordered","hover","size","index","toUpperCase","students","color","market","address","country","Modal","onHide","animation","closeButton","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b64ff0b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {ButtonGroup}from 'react-bootstrap';\r\n\r\nfunction Header(props) {\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n       <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n    <Navbar.Brand href=\"#home\">\r\n      <img\r\n        alt=\"\"\r\n        src=\"./components/layouts/stock-mkt.png\"\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '}\r\n      Mercado Financiero\r\n    </Navbar.Brand>\r\n\r\n           <ButtonGroup aria-label=\"Basic example\">\r\n                {props.data !== true &&\r\n            <Button onClick={props.onClick}\r\n                variant=\"outline-danger\"> Actualizar</Button>}\r\n                {props.data === true &&\r\n            <Button onClick={props.onClick}\r\n                variant=\"outline-danger\" disabled>Actualizar</Button>}\r\n                {props.data === true &&\r\n            <Button onClick={props.onClick}\r\n                variant=\"outline-danger\">Detener</Button>}\r\n                {props.data !== true &&\r\n            <Button onClick={props.onClick}\r\n                variant=\"outline-danger\" disabled> Detener</Button>}\r\n</ButtonGroup>\r\n\r\n  </Navbar>\r\n        <br>\r\n        </br>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: ' #fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: ' #fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function SpanningTable(props) {\r\n  const classes = useStyles();\r\n\r\n  const rows = props.data;\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTotal = invoiceSubtotal / props.total\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"spanning table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Acción</TableCell>\r\n            <TableCell align=\"right\">Volumen Venta</TableCell>\r\n            <TableCell align=\"right\">Volumen Compra</TableCell>\r\n            <TableCell align=\"right\">Volumen Total</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{row.price}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Total de Mercado</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Total Absoluto</TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\">{props.total}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Porcentaje de este mercado sobre el total</TableCell>\r\n            <TableCell align=\"right\">{(ccyFormat(invoiceTotal)*100).toFixed(2)}%</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React from 'react';\r\n\r\n\r\nfunction About() {\r\n    return(\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the wsp</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport SpanningTable from './components/Table3';\nimport About from \"./components/About\";\nimport socketIOClient from \"socket.io-client\";\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Carousel from 'react-bootstrap/Carousel'\nimport Table from 'react-bootstrap/Table'\nimport {Button} from 'react-bootstrap'\nimport {Card} from 'react-bootstrap';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Modal from \"react-bootstrap/Modal\";\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Area,\n    AreaChart,\n} from 'recharts';\n\n\n\n\n\n\nconst socket = socketIOClient('wss://le-18262636.bitzonte.com', {\n            path: '/stocks'\n            });\n\nclass App extends React.Component {\n    state = { socket: socketIOClient('wss://le-18262636.bitzonte.com', {\n            path: '/stocks'\n            }),\n        s: false,\n        first: true,\n    todos: [{id: 1,\n      title: \"Take out\",\n    completed: false},\n    {id: 2,\n      title: \"AA Take out\",\n    completed: false},\n        {id: 3,\n      title: \"BB Take out\",\n    completed: false}\n    ],\n        show: false,\n        acciones_prueba:{},\n        current_stock: {},\n        acciones_instante: {},\n        current_min: {},\n        stocks: {},\n        anterior: {},\n        vender: {},\n        total: {},\n        comprar: {},\n        total_2: 0,\n        valor_graf: {},\n        nuevo: [],\n        nombres_acciones: [],\n        mkt: {},\n        nombres_aux:[],\n        mkt_max: 0,\n        mkts_max: {},\n        st_prueba: {},\n        mkt_prueba: {},\n        acciones_completo:{},\n        s_m: false,\n        car_mkt:\"\",\n    }\n\n    handleClose = () =>{\n       this.setState({show: false})\n    }\n\n    handleShow = (data) => {\n        this.setState({s_m: data})\n       this.setState({show: true})\n    }\n\n\n    onClick = () => {\n\n        if(this.state.s === false) {\n            //this.state.s = true;\n            this.setState({s: true})\n            if (this.state.first === true) {\n                console.log('Encendiendo socket');\n                this.state.socket.connect();\n                this.setState({first: false})\n            }\n            else{\n\n                this.state.socket.connect();\n            console.log('Encendiendo socket 2')\n        }\n            this.state.socket.on(\"UPDATE\", (data) => {\n                console.log(data)\n            //console.log(this.state.comprar['AAPL'], this.state.vender['AAPL']);\n            if (data['ticker'] in this.state.acciones_instante) {\n                this.state.valor_graf[data['ticker']].push({name: data['time'],value: data['value']})\n\n                //this.setState({valor_graf: this.state.valor_graf});\n                var t = new Date(data['time']* 1000);\n                var formatted = ('0' + t.getHours()).slice(-2) + ':' + ('0' + t.getMinutes()).slice(-2);\n                this.state.acciones_prueba[data['ticker']] = [...Object.values(this.state.acciones_prueba[data['ticker']]), {\n                value: data['value'],\n                name: formatted,\n                ticker: data['ticker']}];\n                this.setState({acciones_prueba: this.state.acciones_prueba});\n\n                if (data['value'] > this.state.current_stock[data['ticker']]) {\n                    this.state.acciones_instante[data['ticker']] = [{\n                        name: data['ticker'],\n                        value: data['value'],\n                        max: data['value'],\n                        min: this.state.current_min[data['ticker']],\n                        total: this.state.comprar[data['ticker']] + this.state.vender[data['ticker']],\n                        time: data['time'],\n                        cambio: (((data['value'] - this.state.anterior[data['ticker']])/this.state.anterior[data['ticker']])*100).toFixed(2)\n                    }];\n                    this.setState({acciones_instante: this.state.acciones_instante});\n                    this.state.current_stock[data['ticker']] = data['value'];\n                    this.state.anterior[data['ticker']] = data['value'];\n                    this.setState({current_stock: this.state.current_stock});\n                    this.setState({anterior: this.state.anterior});\n                    this.refreshTableData()\n                }\n\n                else if (data['value'] < this.state.current_min[data['ticker']]) {\n                    this.state.acciones_instante[data['ticker']] = [{\n                        total: this.state.comprar[data['ticker']] + this.state.vender[data['ticker']],\n                        name: data['ticker'],\n                        time: data['time'],\n                        value: data['value'],\n                        max: this.state.current_stock[data['ticker']],\n                        min: data['value'],\n                        cambio: (((data['value'] - this.state.anterior[data['ticker']])/this.state.anterior[data['ticker']])*100).toFixed(2)\n                    }];\n                    this.setState({acciones_instante: this.state.acciones_instante});\n                    this.state.current_min[data['ticker']] = data['value'];\n                    this.state.anterior[data['ticker']] = data['value']\n                    this.setState({current_min: this.state.current_min});\n                    this.setState({anterior: this.state.anterior});\n                }\n\n                else {\n                    this.state.acciones_instante[data['ticker']] = [{\n                        total: this.state.comprar[data['ticker']] + this.state.vender[data['ticker']],\n                        name: data['ticker'],\n                        time: data['time'],\n                        value: data['value'],\n                        max: this.state.current_stock[data['ticker']],\n                        min: this.state.current_min[data['ticker']],\n                        cambio: (((data['value'] - this.state.anterior[data['ticker']])/this.state.anterior[data['ticker']])*100).toFixed(2)\n                    }];\n                    this.setState({acciones_instante: this.state.acciones_instante});\n                    this.state.anterior[data['ticker']] = data['value']\n                    this.setState({anterior: this.state.anterior});\n                }\n            }\n            ////\n            //// Cuando no está dentro de los conocidos.\n            else {\n                this.setState({nombres_acciones:[this.state.nombres_acciones, data['ticker']]})\n                var t = new Date(data['time'] * 1000);\n                var formatted = ('0' + t.getHours()).slice(-2) + ':' + ('0' + t.getMinutes()).slice(-2);\n                this.state.acciones_prueba[data['ticker']] = [ {\n                value: data['value'],\n                name:  formatted,\n                ticker: data['ticker']}];\n                this.setState({acciones_prueba: this.state.acciones_prueba});\n\n\n\n\n                this.state.valor_graf[data['ticker']] = [{name: data['time'],value: data['value']}]\n                this.setState({valor_graf: this.state.valor_graf})\n                this.state.acciones_instante[data['ticker']] = [{\n                    total: this.state.comprar[data['ticker']] + this.state.vender[data['ticker']],\n                    name: data['ticker'],\n                        time: data['time'],\n                        value: data['value'],\n                        max: data['value'],\n                        min: data['value'],\n                        cambio: 0}];\n                this.setState({acciones_instante: this.state.acciones_instante})\n                this.state.current_stock[data['ticker']] = data['value'];\n                this.state.current_min[data['ticker']] = data['value'];\n                this.state.anterior[data['ticker']] = data['value'];\n                 this.setState({current_stock: this.state.current_stock});\n                    this.setState({anterior: this.state.anterior});\n                    this.setState({current_min: this.state.current_min});\n            }\n            let m = {};\n            Object.values(this.state.stocks).forEach(element => {m[element['company_name']] =  element.ticker;\n            this.state.acciones_completo[element['ticker']] = {nombre: element['company_name'], pais: element['country']}});\n\n\n            Object.values(this.state.mkt).forEach(primera =>\n            primera.listed_companies.forEach((element) => {\n            if (Object.keys(m).includes(element)) {\n\n                if (primera['total'] === undefined) {\n                    if (this.state.vender[m[element]] === undefined && this.state.comprar[m[element]] === undefined) {\n                        primera['total'] = 0\n                    }\n                     else if (this.state.comprar[m[element]] === undefined) {\n                        primera['total'] = this.state.vender[m[element]];\n                        this.setState({mkt_max: this.state.mkt_max +=  primera['total']});\n                    }\n                    else if (this.state.vender[m[element]] === undefined) {\n                        primera['total'] = this.state.comprar[m[element]];\n                        this.setState({mkt_max: this.state.mkt_max +=  primera['total']});\n                    }\n                    else{\n                         primera['total'] = this.state.vender[m[element]] + this.state.comprar[m[element]]\n                        this.setState({mkt_max: this.state.mkt_max +=  primera['total']});\n                    }\n                } else {\n                    if (this.state.vender[m[element]] === undefined && this.state.comprar[m[element]] === undefined) {\n                        primera['total'] += 0\n                    } else if (this.state.comprar[m[element]] === undefined) {\n                        primera['total'] += this.state.vender[m[element]];\n                        this.setState({mkt_max: this.state.mkt_max +=  this.state.vender[m[element]]});\n                    }\n                    else if (this.state.vender[m[element]] === undefined) {\n                        primera['total'] += this.state.comprar[m[element]];\n                        this.setState({mkt_max: this.state.mkt_max +=  this.state.comprar[m[element]]});\n                    }\n                    else{\n                         primera['total'] += this.state.vender[m[element]] + this.state.comprar[m[element]];\n                         this.setState({mkt_max: this.state.mkt_max +=  this.state.comprar[m[element]]+ this.state.vender[m[element]]});\n                    }\n                }\n\n                //Prueba tabla nueva\n\n                   if (this.state.mkt_prueba[primera['name']] === undefined){\n                    this.state.mkt_prueba[primera['name']] = {}\n                }\n\n\n\n                   if (this.state.mkt_prueba[primera['name']][m[element]] === undefined ){\n\n                       if (this.state.vender[m[element]] === undefined && this.state.comprar[m[element]] === undefined) {\n                            this.state.mkt_prueba[primera['name']][m[element]] = {desc: m[element], qty:0, unit: 0, price:0, mkt: primera['exchange_ticker']};\n                    } else if (this.state.comprar[m[element]] === undefined) {\n                        this.state.mkt_prueba[primera['name']][m[element]] = {desc: m[element], qty:this.state.vender[m[element]], unit: 0, price: this.state.vender[m[element]], mkt: primera['exchange_ticker']};\n                    }\n                    else if (this.state.vender[m[element]] === undefined) {\n                        this.state.mkt_prueba[primera['name']][m[element]] = {desc: m[element], qty:0, unit: this.state.comprar[m[element]], price:this.state.comprar[m[element]], mkt: primera['exchange_ticker']};\n                    }\n                    else{\n                        this.state.mkt_prueba[primera['name']][m[element]] = {desc: m[element], qty:this.state.vender[m[element]], unit: this.state.comprar[m[element]], price:this.state.comprar[m[element]]+ this.state.vender[m[element]], mkt: primera['exchange_ticker']};\n                    }\n\n                   }\n                   else {\n                       if (this.state.vender[m[element]] === undefined && this.state.comprar[m[element]] === undefined) {\n                           console.log(\"\")\n                   }else if (this.state.comprar[m[element]] === undefined) {\n                        this.state.mkt_prueba[primera['name']][m[element]].qty += this.state.vender[m[element]];\n                        this.state.mkt_prueba[primera['name']][m[element]].price += this.state.vender[m[element]]}\n                    else if (this.state.vender[m[element]] === undefined) {\n                        this.state.mkt_prueba[primera['name']][m[element]].unit += this.state.comprar[m[element]];\n                        this.state.mkt_prueba[primera['name']][m[element]].price += this.state.comprar[m[element]]                    }\n                    else{\n                        this.state.mkt_prueba[primera['name']][m[element]].qty += this.state.vender[m[element]];\n                        this.state.mkt_prueba[primera['name']][m[element]].unit += this.state.comprar[m[element]];\n                        this.state.mkt_prueba[primera['name']][m[element]].price += this.state.comprar[m[element]]  + this.state.vender[m[element]]                 }\n                   }\n\n\n                   this.setState({mkt_prueba: this.state.mkt_prueba})\n\n                //PAra el volumen de venta y compra\n\n\n\n            }}))\n            //Object.values(this.state.stocks)\n            });\n            this.state.socket.on(\"BUY\", (data2) => {\n                //console.log(this.state.vender)\n                if (data2['ticker'] in this.state.vender) {\n                    //this.state.total += data2['volume']\n                    this.state.vender[data2['ticker']] +=\n                        //volume: data2['volume'],\n                       // time: data2['time'],\n                         data2['volume'];\n                        this.setState({vender: this.state.vender})\n\n                }\n                else {\n                    this.state.vender[data2['ticker']] =\n                       // volume: data2['volume'],\n                        //time: data2['time'],\n                         data2['volume'];\n\n                    //this.state.total += data2['volume']\n                    this.setState({vender: this.state.vender})\n                }\n            });\n            this.state.socket.on(\"SELL\", (data3) => {\n                //console.log(this.state.comprar)\n                if (data3['ticker'] in this.state.comprar) {\n                    //this.state.total_2 += data3['volume']\n                    this.state.comprar[data3['ticker']] +=\n                          data3['volume'];\n                        this.setState({comprar: this.state.comprar})\n\n                    }\n                    else {\n                        this.state.comprar[data3['ticker']] = data3['volume'];\n                        this.setState({comprar: this.state.comprar})\n\n                    }\n\n            });\n            this.state.socket.emit('EXCHANGES');\n            this.state.socket.on('EXCHANGES', (data) => {\n                    this.setState({mkt: data})\n\n            });\n            this.state.socket.emit('STOCKS');\n            this.state.socket.on('STOCKS', (data) => {\n                    this.setState({stocks: data});\n\n            });\n\n\n\n\n        }\n        else{\n            //this.state.s = false;\n            this.setState({s: false})\n            console.log('Apagando socket');\n            this.state.socket.disconnect();\n        }\n        //this.state.mkt.key.forEach\n    }\n\n\n    refreshTableData = () => this.setState({refreshTableData: !this.state.refreshTableData})\n\n    markComplete = (id) => {\n        this.setState({ todos: this.state.todos.map(todo => {\n          if(todo.id === id){todo.completed = !todo.completed}\n        return todo;\n        }) });\n}\n\n    delTodo = (id) => {\n      this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]});\n    }\n\n    addTodo = (title) => {\n      const newTodo = {id: 4,\n      title: title,\n      completed: false}\n      this.setState({ todos: [...this.state.todos, newTodo]})\n    }\n\n\n  render()\n    {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Header onClick={this.onClick} data={this.state.s}/>\n                  <div className=\"container\">\n\n                  <Route exact path=\"/\" render={props => (\n                    <React.Fragment>\n\n                    </React.Fragment>\n                  )}/>\n                      <Route path=\"/about\" component={About} data={this.state.mkt_prueba}/>\n                  </div>\n\n                    <Container>\n                        <br>\n                    </br>\n                        <Row>\n                            <Col  sm={6}>\n                        <Carousel bg=\"dark\">\n                    {Object.values(this.state.acciones_prueba).map((acion) =>\n\n\n\n\n                                  <Carousel.Item>\n                                      <Card style={{ width: '32rem', height: '24rem'}} border={'secondary'}>\n                            <Card.Body>\n                            <Card.Title>{acion[0].ticker}</Card.Title>\n                                <Card.Text>\n                                 <React.Fragment>\n                        <AreaChart\n                        width={400}\n                        height={200}\n                        data={acion}\n                        margin={{\n                          top: 10, right: 30, left: 0, bottom: 0,\n                        }}\n                      >\n                        <CartesianGrid strokeDasharray=\"4 4\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#DB2A15\" fill=\"#FA9B87\" />\n                     </AreaChart>\n                    </React.Fragment>\n                                </Card.Text>\n                            </Card.Body>\n                              <Card.Body>\n                                <Card.Text>\n                                  Variación del precio de la acción de {acion[0].ticker} en el tiempo.\n                                </Card.Text>\n                                </Card.Body>\n                                <Card.Footer>\n                                  <small className=\"text-muted\"> - </small>\n                                </Card.Footer>\n                            </Card>\n                                  </Carousel.Item>\n\n                          )}\n                            </Carousel>\n                            </Col>\n                        <Col>\n                               <Card style={{ width: '32rem', height: '24rem'}} border={'secondary'}>\n                            <Card.Body>\n                            <Card.Title>Acciones Bursátiles</Card.Title>\n                                   {/*<Table1 data={this.state.acciones_instante} refresh={this.refreshTableData} />*/}\n                                   <MDBTable scrollY maxHeight=\"277px\">\n                                        {Object.values(this.state.acciones_instante).length !== 0 &&\n                            <Table striped bordered hover size=\"sm\">\n                          <thead>\n\n                          { ['U$', 'value', 'max', 'min', 'Vol. Total','cambio'].map((key, index) =>\n                              <th  key={index}> <p>{key.toUpperCase()}</p> </th>\n                          )}\n                          </thead>\n                                <tbody>\n                                {Object.values(this.state.acciones_instante).map((students, index) =>\n\n                   <React.Fragment>\n\n                   <tr key={index}>\n                       <td><h5><Button variant=\"outline-danger\" size=\"sm\" onClick={() => this.handleShow(students[0].name)} >{students[0].name} </Button> </h5></td>\n                       <td>{students[0].value}</td>\n                      <td>{students[0].max}</td>\n                      <td>{students[0].min}</td>\n                       <td>{students[0].total}</td>\n                       {students[0].cambio >= 0 &&\n                       <td style={{ color: 'green'}} >+{students[0].cambio}%</td>}\n                       {students[0].cambio < 0 &&\n                       <td style={{ color: 'red'}} >{students[0].cambio}%</td>}\n\n                   </tr>\n                                </React.Fragment>) }\n                          </tbody>\n                        </Table>\n                             }\n                                 </MDBTable>\n\n\n\n                               </Card.Body>\n                                <Card.Footer>\n                                  <small className=\"text-muted\">Last update 1 second ago</small>\n                                </Card.Footer>\n                            </Card>\n\n                        </Col>\n                      </Row>\n                        <br>\n                        </br>\n                        <Row>\n                            <Col><h2>Mercados Bursátiles</h2></Col>\n                            <br>\n                            </br>\n                        </Row>\n                        <Row>\n\n\n\n                                {Object.values(this.state.mkt_prueba).length !== 0 &&\n                    <Col>\n\n                    <Carousel disabled>\n                    {Object.values(this.state.mkt_prueba).map((market) => (\n                        <Carousel.Item>\n                         <Card   border={'secondary'}>\n                          <Card.Body>\n                            <Card.Title>{Object.values(market)[0].mkt}</Card.Title>\n                              <SpanningTable data={Object.values(market)} total={this.state.mkt_max}/>\n\n                          </Card.Body>\n                             <Card.Body>\n                           <Card.Title>{this.state.mkt[Object.values(market)[0].mkt].name}</Card.Title>\n                                <Card.Text>\n                                  Mercado ubicado en {this.state.mkt[Object.values(market)[0].mkt].address}, {this.state.mkt[Object.values(market)[0].mkt].country}.\n                                </Card.Text>\n                              </Card.Body>\n                          <Card.Footer className=\"text-muted\">Last update 1 second ago</Card.Footer>\n                        </Card>\n                        </Carousel.Item>\n\n                          ))}\n                            </Carousel>\n                                </Col>}\n\n                        </Row>\n\n\n                    </Container>\n                        <Modal show={this.state.show} onHide={this.handleClose} animation={false}>\n                        <Modal.Header closeButton>\n                          <Modal.Title>{this.state.s_m}</Modal.Title>\n                        </Modal.Header>\n                            {(this.state.acciones_completo)[this.state.s_m] !== undefined &&\n                            <Modal.Body><h3>Nombre Empresa:  {this.state.acciones_completo[this.state.s_m].nombre}</h3>\n                                <h3> País:  {this.state.acciones_completo[this.state.s_m].pais}</h3>\n                            </Modal.Body>}\n\n                            {Object.values(this.state.acciones_completo).length ===0 &&\n                        <Modal.Body>No hay datos\n                            </Modal.Body>}\n                        <Modal.Footer>\n                          <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Close\n                          </Button>\n\n                        </Modal.Footer>\n                      </Modal>\n\n                        <Row><Col><br></br></Col></Row>\n                      </div>\n\n            </Router>\n\n        );\n    }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}